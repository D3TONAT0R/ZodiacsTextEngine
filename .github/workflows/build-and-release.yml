name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  build-and-release:
    runs-on: windows-latest  # Use Windows runner for compatibility with existing build scripts
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set release version
      id: version
      run: |
        if ("${{ github.ref_type }}" -eq "tag") {
          $version = "${{ github.ref_name }}"
        } else {
          $version = "dev-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT
        Write-Host "Release version: $version"
      shell: powershell
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Run tests
      run: dotnet test Tests/Tests.csproj --configuration Release --no-restore
      
    - name: Build ZodiacsTextEngine library
      run: dotnet build ZodiacsTextEngine/ZodiacsTextEngine.csproj --configuration Release --no-restore
      
    - name: Create ZodiacsTextEngine library zip
      run: |
        $engineOutput = "ZodiacsTextEngine/bin/Release/netstandard2.0"
        $zipPath = "ZodiacsTextEngine-Library.zip"
        if (Test-Path $engineOutput) {
          Compress-Archive -Path "$engineOutput/*" -DestinationPath $zipPath -Force
          Write-Host "Created library zip: $zipPath"
        } else {
          Write-Error "Engine output directory not found: $engineOutput"
          exit 1
        }
      shell: powershell
      
    - name: Build ZodiacsTextConsole
      run: dotnet build ZodiacsTextConsole/ZodiacsTextConsole.csproj --configuration Release --no-restore
      
    - name: Publish all profiles for ZodiacsTextConsole
      run: |
        cd ZodiacsTextConsole
        Write-Host "Publishing portable profile..."
        dotnet publish -p:PublishProfile=portable --verbosity normal
        Write-Host "Publishing win-x64 profile..."
        dotnet publish -p:PublishProfile=win-x64 --verbosity normal
        Write-Host "Publishing osx-x64 profile..."
        dotnet publish -p:PublishProfile=osx-x64 --verbosity normal
        Write-Host "Publishing osx-arm64 profile..."
        dotnet publish -p:PublishProfile=osx-arm64 --verbosity normal
        Write-Host "Publishing linux-x64 profile..."
        dotnet publish -p:PublishProfile=linux-x64 --verbosity normal
        Write-Host "All publish profiles completed."
      shell: powershell
      
    - name: List generated zip files
      run: |
        Write-Host "Generated zip files:"
        if (Test-Path "ZodiacsTextConsole/bin/Build") {
          Get-ChildItem -Path "ZodiacsTextConsole/bin/Build" -Filter "*.zip" -Recurse | ForEach-Object {
            Write-Host "  $($_.FullName)"
          }
        } else {
          Write-Host "  No ZodiacsTextConsole/bin/Build directory found"
        }
        Write-Host "Engine library zip:"
        if (Test-Path "ZodiacsTextEngine-Library.zip") {
          Write-Host "  ZodiacsTextEngine-Library.zip found"
        } else {
          Write-Host "  ZodiacsTextEngine-Library.zip NOT found"
        }
      shell: powershell
      
    - name: Verify all expected files exist
      run: |
        $files = @(
          "ZodiacsTextEngine-Library.zip",
          "ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-portable.zip",
          "ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-win-x64.zip",
          "ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-osx-x64.zip",
          "ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-osx-arm64.zip",
          "ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-linux-x64.zip"
        )
        $missing = @()
        foreach ($file in $files) {
          if (!(Test-Path $file)) {
            $missing += $file
            Write-Warning "Missing file: $file"
          } else {
            Write-Host "Found: $file"
          }
        }
        if ($missing.Count -gt 0) {
          Write-Error "Missing $($missing.Count) expected files"
          exit 1
        }
        Write-Host "All expected files found!"
      shell: powershell
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        files: |
          ZodiacsTextEngine-Library.zip
          ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-portable.zip
          ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-win-x64.zip
          ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-osx-x64.zip
          ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-osx-arm64.zip
          ZodiacsTextConsole/bin/Build/ZodiacsTextConsole-linux-x64.zip
        body: |
          Automated release for ZodiacsTextEngine ${{ steps.version.outputs.version }}
          
          This release includes:
          - ZodiacsTextEngine library
          - ZodiacsTextConsole builds for all supported platforms (portable, win-x64, osx-x64, osx-arm64, linux-x64)
        draft: false
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}